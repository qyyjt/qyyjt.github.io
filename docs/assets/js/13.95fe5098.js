(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{433:function(t,s,a){"use strict";a.r(s);var e=a(65),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"开发升级流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发升级流程"}},[t._v("#")]),t._v(" 开发升级流程")]),t._v(" "),a("p",[t._v("一般需求开发时会有如下流程：")]),t._v(" "),a("ol",[a("li",[t._v("在本地开发，并更新到 dev 环境自测、测试、UI 样式校对问题修改")]),t._v(" "),a("li",[t._v("发布上线时，提交到 test 环境")]),t._v(" "),a("li",[t._v("中台人员用 test 环境的代码，发布 uat")]),t._v(" "),a("li",[t._v("uat 无问题，发布外网")])]),t._v(" "),a("p",[t._v("所以升级的时候，我们的工作并不多，只需要把打包后的代码搞到 test 环境的服务器上就好了。")]),t._v(" "),a("h2",{attrs:{id:"一、svn-代码迁移到-git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、svn-代码迁移到-git"}},[t._v("#")]),t._v(" 一、svn 代码迁移到 git")]),t._v(" "),a("p",[t._v("目前我们使用 git 来代替 svn ，如果有代码在 svn 上，那么开发之前就要先迁移过来")]),t._v(" "),a("h3",{attrs:{id:"_1、代码迁移注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、代码迁移注意事项"}},[t._v("#")]),t._v(" 1、代码迁移注意事项")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如果 git 和 svn 上都有某个项目的代码，则以 git 上的为准，后续开发代码都放在 git 上； svn 上的代码为旧的代码，可以不用再维护。")])]),t._v(" "),a("li",[a("p",[t._v("一些旧的需求，代码只在 svn 上，那么开发需求前，先在 git 上创建一个相同目录、相同名称的项目，并把 svn 上的代码拷贝、提交到 git 上的 dev 分支，然后在 "),a("code",[t._v("前端代码git迁移")]),t._v(" 文档中记录一下，便于后续配置 jenkins；迁移项目的时候，要注意下是否有其他人也在开发这个项目。")])]),t._v(" "),a("li",[a("p",[t._v("如果是新需求、新创建的代码，直接在 git 上新建项目即可，然后在文档中记录.")])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("从 svn 上迁移代码，要看下 log 里的记录，和上一次提交的人确认一下，是否需求已经上线（即当前的代码与线上代码保持同步，防止 svn 上需求未上线，导致代码夹带）")])]),t._v(" "),a("h3",{attrs:{id:"_2、使用插件开启-vconsole"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、使用插件开启-vconsole"}},[t._v("#")]),t._v(" 2、使用插件开启 vconsole")]),t._v(" "),a("p",[t._v("我们使用真机在 dev 环境测试页面时，很多时候需要使用 vconsole，但是有时候在项目升级时会忘记关掉，这样就可能会引起一些麻烦；为了避免这些失误操作，我们推荐在打包的时候自动开启 vconsole，而无需在页面手动添加。")]),t._v(" "),a("p",[t._v("首先安装：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" vconsole-webpack-plugin --save-dev\n")])])]),a("p",[t._v("根据 "),a("code",[t._v("package.json")]),t._v(" 文件中的 "),a("code",[t._v("build")]),t._v(" 配置新增一条 "),a("code",[t._v("debug")]),t._v(" 配置")]),t._v(" "),a("blockquote",[a("p",[t._v("注："),a("code",[t._v("webpack 5.x")]),t._v(" 版本中环境变量配置与 "),a("code",[t._v("webpack 4.x")]),t._v(" 版本写法不同")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("scripts"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ...\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// webpack 4.x")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"debug"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webpack --env.debug=true  --config  build/webpack.prod.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// webpack 5.x")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"debug"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webpack --env debug  --config  build/webpack.prod.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"build"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webpack --config  build/webpack.prod.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ...\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在 "),a("code",[t._v("webpack.prod.js")]),t._v(" 文件配置里增加以下插件配置。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引入插件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" vConsolePlugin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vconsole-webpack-plugin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 增加配置")]),t._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("env")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("plugins")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("vConsolePlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("enable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" env"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("debug"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("然后修改 "),a("code",[t._v("gulpfile.js")]),t._v(" 中的打包命令即可")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\ngulp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("task")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'build'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("cb")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// shell.exec('yarn build');")]),t._v("\n  shell"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yarn debug'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开启 vconsole")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cb")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n")])])]),a("p",[t._v("这样我们在执行 "),a("code",[t._v("gulp")]),t._v(" 命令的时候，就会运行 "),a("code",[t._v("yarn debug")]),t._v("，从而开启页面中的 "),a("code",[t._v("vconsole")]),t._v("，gulp 执行完毕之后，就可以在真机上看到效果了；")]),t._v(" "),a("p",[t._v("代码提交时，服务器上会使用 "),a("code",[t._v("yarn build")]),t._v(" 或 "),a("code",[t._v("npm run build")]),t._v(" 命令打包代码，这样就不会开启 "),a("code",[t._v("vconsole")]),t._v("。")]),t._v(" "),a("blockquote",[a("p",[t._v("注：若在页面中单独引入并开启 "),a("code",[t._v("vconsole")]),t._v("，那么打包后的代码仍会有 "),a("code",[t._v("vconsole")])])]),t._v(" "),a("h2",{attrs:{id:"二、git-开发流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、git-开发流程"}},[t._v("#")]),t._v(" 二、git 开发流程")]),t._v(" "),a("p",[t._v("我们在项目开发中，会用到如下几个不同分支。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("分支")]),t._v(" "),a("th",[t._v("介绍")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("dev")]),t._v(" "),a("td",[t._v("开发环境")])]),t._v(" "),a("tr",[a("td",[t._v("master")]),t._v(" "),a("td",[t._v("代码会自动编译到 test 环境")])]),t._v(" "),a("tr",[a("td",[t._v("story#*")]),t._v(" "),a("td",[t._v("功能分支")])]),t._v(" "),a("tr",[a("td",[t._v("bug#*")]),t._v(" "),a("td",[t._v("bug 分支，用于修复外网 bug")])])])]),t._v(" "),a("p",[t._v("开发中，常见的有主要有如下场景")]),t._v(" "),a("ol",[a("li",[t._v("内网开发新功能")]),t._v(" "),a("li",[t._v("修复已发布到外网的 bug")])]),t._v(" "),a("h3",{attrs:{id:"_1、内网开发新功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、内网开发新功能"}},[t._v("#")]),t._v(" 1、内网开发新功能")]),t._v(" "),a("p",[t._v("假如，我们有一个需求号为 "),a("code",[t._v("1650")]),t._v("，这时候需要创建一个功能分支 "),a("code",[t._v("story#1650")]),t._v("。或者禅道的 bug 号是 123，则创建"),a("code",[t._v("bug#123")]),t._v("分支。")]),t._v(" "),a("p",[t._v("由于新功能开发不能夹带没有升级到外网的代码，而 "),a("code",[t._v("master")]),t._v(" 分支正好对应的是外网的代码，所以我们需要从 "),a("code",[t._v("master")]),t._v("分支去创建功能分支。")]),t._v(" "),a("p",[t._v("为了保证 master 分支最新的 commit 记录，先 fetch 一下：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch origin master\n")])])]),a("p",[t._v("然后，以远程 master 为基准创建功能分支。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b story"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1650 origin/master")]),t._v("\n")])])]),a("p",[t._v("在开发过程中，我们可以在 story#1650 分支上提交很多个 commit 记录，到达一个开发阶段之后，比如你需要在 dev 环境查看效果，或者需要给产品测试，我们需要先把你的分支合并到 dev 分支:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 首先切换到dev分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout dev\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 拉取最新代码，如果有冲突，解决冲突")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin dev\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 合并")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge story"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1650")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 合并结束后，将最终代码 push 到远程 dev 分支。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin dev\n")])])]),a("p",[t._v("然后再使用 "),a("RouterLink",{attrs:{to:"/project/gulpConfig.html"}},[t._v("gulp")]),t._v(" 把打包后的文件更新到 dev 服务器，或者使用手动更新的方式。")],1),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 更新到 dev 服务器")]),t._v("\ngulp\n")])])]),a("p",[t._v("先合并到 dev 分支再进行 gulp ，是为了防止两个人开发相同项目时，gulp 的时候互相覆盖掉对方的代码。")]),t._v(" "),a("h3",{attrs:{id:"_2、修复已发布到外网的-bug"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、修复已发布到外网的-bug"}},[t._v("#")]),t._v(" 2、修复已发布到外网的 bug")]),t._v(" "),a("p",[t._v("外网出 bug 要在外网的代码基础之上去修改，所以也是从 master 分支去创建 bug 分支，这里创建分支需要携带 bug 号，其他的操作和新功能开发相同。")]),t._v(" "),a("h3",{attrs:{id:"_3、避免在-dev-分支开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、避免在-dev-分支开发"}},[t._v("#")]),t._v(" 3、避免在 dev 分支开发")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("请避免在 dev 分支直接开发新功能。")])]),t._v(" "),a("p",[t._v("如果不小心直接在 dev 分支开发了：")]),t._v(" "),a("ul",[a("li",[t._v("第一种情况，还没有 commit")])]),t._v(" "),a("p",[t._v("可以先执行 git stash，将代码先暂存起来，然后切换到功能分支，执行 git stash pop 将暂存的代码释放出来。然后在功能分支开发即可。")]),t._v(" "),a("ul",[a("li",[t._v("第二种情况，已经在 dev 分支上 commit 过")])]),t._v(" "),a("p",[t._v("首先，把 dev 分支上该需求的提交过滤出来，复制所有关于该需求提交的 hash 值，注意多个哈希值是按时间的正序排列，即最早提交的 hash 在前，后提交的 hash 在后。如果你用的是 Webstorm，它会自动帮你排好哈希顺序。")]),t._v(" "),a("p",[t._v("紧接着，切换到功能分支，执行 cherry-pick，将刚才选中的提交 hash 全部 cherry-pick 到功能分支上。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout feature/xxx\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cherry-pick -x hash1 hash2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),a("p",[t._v("如果出现冲突，请解决冲突，解决完执行 git cherry-pick --continue 继续，直到结束。")]),t._v(" "),a("p",[t._v("之后，在功能分支上开发即可。")]),t._v(" "),a("h3",{attrs:{id:"_4、git-提交信息规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、git-提交信息规范"}},[t._v("#")]),t._v(" 4、git 提交信息规范")]),t._v(" "),a("p",[t._v("约定的提交格式如下:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("提交类型"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#禅道号或bug号] 需求名称或bug名称 本次提交描述")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 例")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bug"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#13184] uat--发现页面点击城投小程序页面的立即体验跳转页面报错 修改 core-js 版本")]),t._v("\n")])])]),a("ol",[a("li",[t._v("提交类型：主要的有 "),a("code",[t._v("story")]),t._v(" 和 "),a("code",[t._v("bug")])]),t._v(" "),a("li",[t._v("禅道号或 bug 号：在禅道上可以查看，注意不要写成任务号")]),t._v(" "),a("li",[t._v("本次提交描述：填写具体的改动描述")])]),t._v(" "),a("h2",{attrs:{id:"三、项目升级流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、项目升级流程"}},[t._v("#")]),t._v(" 三、项目升级流程")]),t._v(" "),a("p",[t._v("升级时，以"),a("a",{attrs:{href:"http://project.finchina.com/AppProject/",target:"_blank",rel:"noopener noreferrer"}},[t._v("禅道看板"),a("OutboundLink")],1),t._v("中的升级单为准，若你的需求或 bug 在此次升级范围内，可使用 "),a("a",{attrs:{href:"https://git.finchina.com/groups/hf-develop/web/app/-/merge_requests",target:"_blank",rel:"noopener noreferrer"}},[t._v("merge request"),a("OutboundLink")],1),t._v(" 的方式把功能分支合并到 master 。等待编译完成时，即可在 test 环境自测；")]),t._v(" "),a("p",[t._v("如果 git 上合并了之后久久没有看到效果，那可能是 jenkins 编译时出错了，这时候也可以先使用手动提交的方式。")]),t._v(" "),a("p",[t._v("在上线之后还需要把 master 合并到 dev 分支，保证 dev 分支上有外网最新的代码。")]),t._v(" "),a("h2",{attrs:{id:"四、其他注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、其他注意事项"}},[t._v("#")]),t._v(" 四、其他注意事项")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("ol",[a("li",[t._v("代码解决冲突的时候要仔细")]),t._v(" "),a("li",[t._v("提交到 test 后加强自测")]),t._v(" "),a("li",[t._v("本地 npm 版本升级到 "),a("code",[t._v("8.6.0")]),t._v(" 或以上，与服务器上版本保持一致")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);